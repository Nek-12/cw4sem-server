
plugins {
    id("org.springframework.boot") version "2.5.0-M3"
    id("io.spring.dependency-management") version "1.0.11.RELEASE"
    id "org.jetbrains.kotlin.jvm" version "1.4.31"
    id "org.jetbrains.kotlin.plugin.spring" version "1.4.31"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.4.31"
    id "org.jetbrains.kotlin.kapt" version "1.4.31"
}

group = "com.fantastictrio"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_11

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

jar {
    manifest {
        attributes["Main-Class"] = "com.fantastictrio.cw4sem.server.Cw4semServerApplication"
    }
    exclude("META-INF/*.RSA", "META-INF/*.SF","META-INF/*.DSA")

    from {
        (configurations.compile).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

repositories {
    mavenCentral()
    maven { url = uri("https://repo.spring.io/milestone") }
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("io.jsonwebtoken:jjwt-api:0.11.2")
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    runtimeOnly("mysql:mysql-connector-java")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.2")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.2")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.security:spring-security-test")
}

